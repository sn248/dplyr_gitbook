Rcpp::sourceCpp('OneDrive/Learning/Rcpp/Rcpp_boost2.cpp')
Rcpp::sourceCpp('OneDrive/Learning/Rcpp/Rcpp_boost2.cpp')
inputIC()
Rcpp::sourceCpp('OneDrive/Learning/Rcpp/Rcpp_boost2.cpp')
Rcpp::sourceCpp('OneDrive/Learning/Rcpp/Rcpp_boost2.cpp')
q(save = N)
q(save = F)
q(save = "no")
library(mrgsolve)
q(sa)
q(save = "no")
library(devtools)
has_devel()
install.packages(c("boot", "deSolve", "evaluate", "formatR", "ggplot2", "git2r", "gridExtra", "gtable", "htmlwidgets", "Matrix", "mgcv", "nlme", "openssl", "plotly", "RCurl", "rmarkdown", "scales", "viridis", "XML"))
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
?select
nycflights13
data()
library(dplyr)
nycflights
data
data()
nasa
nasa %>% View
?nasa
tbl_df(nasa)
str(nasa)
nasa <- as.data.frame(nasa)
tbl_df(nasa)
library(dplyr)
nasa
suppressPackageStartupMessages(TRUE)
?suppressPackageStartupMessages
library(dplyr)
tbl_df(nasa)
str(nasa)
tbl_df(as.data.frame(nasa))
tbl_df(as.data.frame(nasa),5)
tbl_df(as.data.frame(nasa)) %>% head(.,5)
tbl_df(as.data.frame(nasa)) %>% head(.,2)
?tnl_df
?tbl_df
tbl_df(as.data.frame(nasa)) %>% head()
tbl_df(as.data.frame(nasa)) %>% head()
nasa <- as.data.frame(nasa)
nasa %>% size()
nasa %>% nrow()
nasa %>% ncol()
str(nasa)
nasa  %>% View
q()
library(dplyr)
nasa
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long) %>%
head(.,3)
nasa %>%
select(lat, long, year, month, surftemp) %>%
arrange(desc(surftemp)) %>% #ascending, by default
head(.,3)
nasa %>%
select(lat, long)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>%
arrange(desc(surftemp)) %>% #ascending, by default
head(.,3)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>%
arrange(surftemp) %>% desc() %>%
head(.,3)
nasa %>% colnames()
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>%
arrange(desc(surftemp)) %>% #ascending, by default
head(.,3)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)  %>%
arrange(desc(surftemp)) %>%
head(.,3)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)  %>%
arrange(desc(surftemp))
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)  %>%
arrange(max(surftemp))
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)  %>%
max(surftemp)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)  %>%
max(surftemp)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year) %>% max()
nasa <- as.data.frame(nasa)
nasa %>%
select(lat, long, year, month, surftemp) %>% group_by(year)
install.packages("~/Downloads/libSBML_5.13.0.tar.gz", repos = NULL, type = "source")
remove.packages(libSBML)
install.packages("~/Downloads/libSBML_5.13.0.tar.gz", repos = NULL, type = "source")
library(libSBML)
library(libSBML)
libSBML?
?
)
?libsbml
??libsbml
package?libSBML
package?dplyr
help(package = "dplyr")
help(package = "libSBML")
help(package = "libSBML")
library(libSBML)
getLibSBMLDottedVersion()
library(libSBML)
libSBML::Association()
?libSBML::Association()
libSBML::Species()
library(poped)
library(devtoos)
library(devtools)
install.packages("devtools")
library(devtools)
install_github("andrewhooker/poped")
library(PopED)
help(package = "PopED")
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/harmonic_oscillator.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/arma_test.cpp')
install.packages("RcppArmadillo")
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/arma_test.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/arma_test.cpp')
Rcpp::sourceCpp('Documents/Git_repos/TestFilesRcpp/arma_test.cpp')
install.packages(c("jsonlite", "plyr"))
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("feather", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("magrittr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
q()
library(libsbml)
install.packages(c("curl", "mgcv", "Rcpp", "rmarkdown"))
install.packages("~/Downloads/libSBML_5.13.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/libSBML_5.13.0.tar.gz", repos = NULL, type = "source")
Sys.info()
R.i
R.info
q()
Sys.info()
install.packages("RcppArmadillo")
install.packages("~/Downloads/libSBML_5.13.0.tar.gz", repos = NULL, type = "source")
q()
install.packages("~/Downloads/libSBML_5.13.1.tgz", repos = NULL, type = .Platform$pkgType)
library(libSBML)
library(libSBML)
library(libSBML)
install.packages("~/Downloads/libSBML_5.13.1.tgz", repos = NULL, type = .Platform$pkgType)
library(libSBML)
install.packages("~/Downloads/libSBML_5.13.1.tgz", repos = NULL, type = .Platform$pkgType)
library(libSBML)
q()
install.packages("curl")
install.packages("digest")
detach("package:datasets", unload=TRUE)
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/module_example1.cpp')
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/module_example1.cpp')
Uniform
uni1 <- Uniform(1,2)
unif_module <- Module( "unif_module", getDynLib(fx_unif ) )
install.packages("~/Downloads/rsbml_2.30.0.tar.gz", repos = NULL, type = "source")
q()
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/vec_module.cpp')
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/vec_module.cpp')
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/vec_module.cpp')
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/vec_module.cpp')
vec
mod_vec <- Module( "mod_vec", getDynLib(fx_vec), mustStart = TRUE )
mod_vec <- Module( "mod_vec", getDynLib(fx_vec), mustStart = TRUE )
library(Rcpp)
mod_vec <- Module( "mod_vec", getDynLib(fx_vec), mustStart = TRUE )
vec <- mod_vec$vec
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/vec_module.cpp')
Rcpp::sourceCpp('Google Drive/r_package_projects/rcpp_module_examples/vec_module.cpp')
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(devtools)
install_github("genomicsclass/ph525x")
biocLite(Homo.Sapiens)
biocLite("Homo.Sapiens")
2
biocLite("Homo.sapiens")
install_github("genomicsclass/ph525x")
library(devtools)
install_github("genomicsclass/ph525x")
library(BiocInstaller)
biocLite("BSgenome.Hsapiens.UCSC.hg19")
biocLite("SNPlocs.Hsapiens.dbSNP.20120608")
library(BSgenome.Hsapiens.UCSC.hg19)
Hsapiens$chr17
library(BSgenome.Hsapiens.UCSC.hg19)
Hsapiens$chr17
Hsapiens$chr19
Hsapiens$chr16
biocLite("genefu")
library("biocLite")
library(BiocInstaller)
biocLite("genefu")
library(genefu)
data("sig.gene70")
dim(sig.gene70)
head(sig.gene70)[,1:6]
library(dplyr)
sig.gene70 %>% filter(!is.na(NCBI.gene.symbol))
sig.gene70 %>% filter(!is.na(NCBI.gene.symbol)) %>% nrow()
sig.gene70 %>% filter(is.na(NCBI.gene.symbol)) %>% nrow()
head(sig.gene70)
sig.gene70 %>% filter(is.na(NCBI.gene.symbol)) %>% nrow()
q()
library(genefu)
sig.gene70
library(dplyr)
sig.gene70 %>% names()
sig.gene70 %>% select(Description)
sig.gene70 %>% select(Description) %>% grep("ase", .)
x <- sig.gene70 %>% select(Description)
grep("ase",x)
grep("ase",x, fixed = T)
x
str(x)
grep("ase",x$Description[1], fixed = T)
grep("ase",x$Description[2], fixed = T)
grep("ase",x$Description[3], fixed = T)
grep("ase",x$Description[4], fixed = T)
grep("ase",x$Description[9], fixed = T)
?lapply
q(save = "no")
q()
plot(cars)
q()
str(mtcars)
mtcars
?mtcars
q()
install.packages(c("BH", "cluster", "codetools", "colorspace", "curl", "DBI", "digest", "evaluate", "feather", "foreign", "ggplot2", "git2r", "hms", "jsonlite", "knitr", "lattice", "lava", "Matrix", "mclust", "mgcv", "nlme", "openssl", "PopED", "prodlim", "R6", "Rcpp", "RcppArmadillo", "RcppGSL", "reshape2", "rmarkdown", "RSQLite", "scales", "snow", "stringi", "SuppDists", "survival", "XML", "yaml"))
library(BiocInstaller)
biocLite("genefu")
library(genefu)
data("sig.gene70")
dim(sig.gene70)
head(sig.gen70)[,1:6]
head(sig.gen70)
sig.gene70
head(sig.gene70)
sig.gene70
head(sig.gene70)[,1:5]
head(sig.gene70)[,1:6]
?grep
head(sig.gene70)[,1:9]
sig.gene70$Description
grep("kinase",sig.gene70$Description)
library(COPDSexualDimorphism.data)
data(lgrc.expr.meta)
library(COPDSexualDimorphism.data)
library(COPDSexualDimorphism.data)
install(COPDSexualDimorphism.data)
install.packages(COPDSexualDimorphism.data)
install.packages("COPDSexualDimorphism.data")
R.version
library(BiocInstaller)
biocLite("BSgenome.Hsapiens.UCSC.hg19")
library(BSgenome.Hsapiens.UCSC.hg19)
chr11seq <- BSgenome.Hsapiens.UCSC.hg19[["chr11"]]
BSgenome.Hsapiens.UCSC.hg19
chr11seq <- BSgenome.Hsapiens.UCSC.hg19[["chr11"]]
subseq(chr11seq,start=10^6,width=25)
?countPattern
countPattern("ATG",chr11seq)
countPattern("TGA",chr11seq)
countPattern("TAA",chr11seq)
countPattern("TAG",chr11seq)
alphabetFrequency()
?alphabetFrequency
chr7seq <- BSgenome.Hsapiens.UCSC.hg19[["chr7"]]
alphabetFrequency(chr7seq)
x <- alphabetFrequency(chr7seq)
sum(x)
x[2]
x[2]/sum(x)
library(BiocInstaller)
biocLite("SNPlocs.Hsapiens.dbSNP144.GRCh37")
library(SNPlocs.Hsapiens.dbSNP144.GRCh37)
library(SNPlocs.Hsapiens.dbSNP144.GRCh37)
snps144 = SNPlocs.Hsapiens.dbSNP144.GRCh37
s17 = snplocs(snps144, "ch17")
head(s17)
s17
grep(73971683,s17$RefSNP_id)
grep(556541063,s17$RefSNP_id)
s17$loc[1]
s17$loc[7377]
library(Biobase)
library(Biobase)
library(genefu)
data(nkis)
dim(demo.nkis)
head(demo.nkis)[,1:8]
nkes = ExpressionSet(data.nkis, phenoData=AnnotatedDataFrame(demo.nkis),
featureData=AnnotatedDataFrame(annot.nkis))
nkes = ExpressionSet(transpose(data.nkis), phenoData=AnnotatedDataFrame(demo.nkis),
featureData=AnnotatedDataFrame(annot.nkis))
?transpose
??transpose
nkes = ExpressionSet(t(data.nkis), phenoData=AnnotatedDataFrame(demo.nkis),
featureData=AnnotatedDataFrame(annot.nkis))
nkes = ExpressionSet(t(data.nkis), phenoData=AnnotatedDataFrame(demo.nkis),
featureData=AnnotatedDataFrame(annot.nkis))
nkes = ExpressionSet(data.nkis, phenoData=AnnotatedDataFrame(t(demo.nkis)),
featureData=AnnotatedDataFrame(annot.nkis))
nkes = ExpressionSet(t(data.nkis), phenoData=AnnotatedDataFrame(t(demo.nkis)),
featureData=AnnotatedDataFrame(annot.nkis))
nkes = ExpressionSet(data.nkis, phenoData=AnnotatedDataFrame(demo.nkis),
featureData=AnnotatedDataFrame(t(annot.nkis)))
library(Biobase)
library(genefu)
data(nkis)
nkiES = ExpressionSet(t(data.nkis), phenoData=AnnotatedDataFrame(demo.nkis),
featureData=AnnotatedDataFrame(annot.nkis))
nkiES
sum(duplicated(featureNames(nkiES)))
fData(nkiES)
fdata(nkiES)
fData(nkiES)
names(fData(nkiES))
fData(nkiES)
x<- fData(nkiES)
x$Alternative.symbols
x$Description
x$EntrezGene.ID
x$Cytoband
install.packages("gwascat")
library(gwascat)
source("https://bioconductor.org/biocLite.R")
biocLite("gwascat")
library(gwascat)
source("https://bioconductor.org/biocLite.R")
biocLite("gwascat")
library(gwascat)
source("https://bioconductor.org/biocLite.R")
biocLite("fastmatch")
bioclite("fastmatch")
install.packages("~/Downloads/fastmatch_1.1-0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/fastmatch_1.1-0.tar.gz", repos = NULL, type = "source")
library(gwascat)
data(ebicat37)
ebicat37
sort(table(ebicat37$CHR_ID),decreasing=TRUE)
sort(table(ebicat37$DISEASE.TRAIT),decreasing=TRUE)
sort(table(ebicat37$DISEASE.TRAIT),decreasing=TRUE)
ebicat37$DISEASE.TRAIT)
ebicat37$DISEASE.TRAIT
ebicat37$CHR_ID
names(ebicat37)
ebicat
ebicat37
sort(table(ebicat37$DISEASE.TRAIT),decreasing=TRUE)
sort(table(ebicat37$CHR_ID),decreasing=TRUE)
sort(table(ebicat37$DISEASE/TRAIT),decreasing=TRUE)
sort(table(ebicat37$STUDY),decreasing=TRUE)
sort(table(ebicat37$DATE),decreasing=TRUE)
sort(table(ebicat37$DISEASE),decreasing=TRUE)
sort(table(ebicat37$DIS),decreasing=TRUE)
str(ebicat37)
str(ebicat37)
sort(table(ebicat37$DATE ADDED TO CATALOG),decreasing=TRUE)
sort(table(ebicat37$DATE.ADDED.TO.CATALOG),decreasing=TRUE)
sort(table(ebicat37$DATE/ADDED/TO/CATALOG),decreasing=TRUE)
sort(table(ebicat37$DATE.ADDED.TO.CATALOG),decreasing=TRUE)
sort(table(ebicat37$'CHR_ID'),decreasing=TRUE)
sort(table(ebicat37$'DISEASE.TRAIT'),decreasing=TRUE)
str(ebicat37)
ebicat37@elementMetadata@listData$`DISEASE/TRAIT`
sort(table(ebicat37@elementMetadata@listData$`DISEASE/TRAIT`),decreasing=TRUE)
head(sort(table(ebicat37@elementMetadata@listData$`DISEASE/TRAIT`),decreasing=TRUE))
library(COPDSexualDimorphism.data)
data(lgrc.expr.meta)
bioclite(COPDSexualDimorphism.data)
source("https://bioconductor.org/biocLite.R")
biocLite("COPDSexualDimorphism.data")
data(lgrc.expr.meta)
library("COPDSexualDimorphism.data")
data(lgrc.expr.meta)
str(expr.meta)
library(dplyr)
expr.meta %>% filter(GENDER == 2)
expr.meta$GENDER
expr.meta %>% filter(GENDER == "2-Female")
expr.meta %>% filter(GENDER == "2-Female") %>% summarise(N = count())
expr.meta %>% filter(GENDER == "2-Female") %>% summarise(N = n())
expr.meta %>% filter(GENDER == "2-Female") %>% summarise(N = median(pkyrs))
expr.meta %>% %>% summarise(N = median(pkyrs))
expr.meta %>% summarise(N = median(pkyrs))
hist(expr.meta$pkyrs)
boxplot(pkyrs~gender, data=expr.meta)
expr.meta$pyp1 = expr.meta$pkyrs+1
library(MASS)
lm1 = lm(pyp1~gender, data=expr.meta)
boxcox(lm1)
library(devtools)
install_github("genomicsclass/tissuesGeneExpression")
library(tissuesGeneExpression)
data(tissuesGeneExpression)
head(e[,1:5])
table(tissue)
e
str(e)
e["209169_at",]
?boxplot
library(tissuesGeneExpression)
data(tissuesGeneExpression)
head(e[,1:5])
table(tissue)
IDs = c("201884_at", "209169_at", "206269_at", "207437_at", "219832_s_at", "212827_at")
e[ID,]
e[IDs,]
q()
library(tissuesGeneExpression)
data(tissuesGeneExpression)
head(e[,1:5])
table(tissue)
IDs = c("201884_at", "209169_at", "206269_at", "207437_at", "219832_s_at", "212827_at")
e1 <- e(IDs,:)
e1 <- e(IDs,)
e1 <- e[IDs,]
table(e1)
e1 <- e[IDs,]
library(rafalib)
mypar(3,2)
for(i in IDs){
boxplot(e[i,]~tissue,las=2)
install.packages("rafalib")
library(rafalib)
mypar(3,2)
for(i in IDs){
boxplot(e[i,]~tissue,las=2)
}
}
install.packages("rafalib")
install.packages("rafalib")
source("https://bioconductor.org/biocLite.R")
biocLite("hgu133aprobe")
library(hgu133aprobe)
head(hgu133aprobe)
library(dplyr)
hgu133aprobe %>% filter(Probe.Set.Name == "206269_at")
q()
q()
library(Biobase)
library(genefu)
data(nkis)
nkiES = ExpressionSet(t(data.nkies),phenoData = AnnotatedDataFrame(demo.nkis),featureData = AnnotatedDataFrame(annot.nkis))
nkiES = ExpressionSet(t(data.nkis),phenoData = AnnotatedDataFrame(demo.nkis),featureData = AnnotatedDataFrame(annot.nkis))
nkiES
names(fData(nkiEES))
names(fData(nkiES))
fData(nkiEES)
fData(nkiES)
names(fData(nkiES))
names(fData(nkiES))
str(nkiES)
nkiES@featureData@data$EntrezGene.ID
fData(nkiES)$EntrezGene.id
fData(nkiES)$EntrezGene.id(59)
names(fData(nkiES))
mean(is.na(exprs(nkiES)))
which.min(apply(exprs(nkiES),1,mad))
install.packages(impute)
install.packages("impute")
library(impute)
exprs(nkiES) = ied
library(RNAseqData.HNRNPC.bam.chr14)
bf = RNAseqData.HNRNPC.bam.chr14_BAMFILES
library(GenomicFiles)
bff = GenomicFiles(files=bf)
library(Homo.sapiens)
seqinfo(bff) = seqinfo(Homo.sapiens)
bff
install.packages("RNAseqData.HNRNPC.bam.chr14")
q()
2+4
setwd("~/Google Drive/dplyr_tutorial/dplyr_gitbook")
